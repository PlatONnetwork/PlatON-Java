node = {
    ip=192.168.7.109
}

peer = {
    listen.port=12345
    public-key=0x506bc1dc099358e5137292f4efdd57e400f29ba5132aa5d12b18dac1c1f6aaba645c0b7b58158babbfa6c6cd5a48aa7340a8749176b120e8516216787a13dc76
    private-key=a392604efc2fad9c0b3da43b5f698a2e3f270f170d859912be0d54742275c5f6
    #in seconds
    create.session.timeout = 10

    #in seconds, message.response.timeout > create.session.timeout
    message.response.timeout = 12
    #in seconds
    peer.connect.timeout = 2

    #in seconds
    time.interval.for.duplicated.message = 30

    active.list =
        [
            {
                ip=192.168.7.113
                port=11001
                public-key=0x506bc1dc099358e5137292f4efdd57e400f29ba5132aa5d12b18dac1c1f6aaba645c0b7b58158babbfa6c6cd5a48aa7340a8749176b120e8516216787a13dc76
            }
        ]
}

grpc = {
    listen.port = 11001
}

kad.plugin = {
    id-length = 20
    restore-interval = 50000
    response-timeout = 1
    operation-timeout = 0
    max-concurrent-messages-transiting = 1
    K-value = 8
    replacement-cache-size = 8
    stale-times = 8
}

lmdb = {
    lmdbjava-native-lib = "lmdb\\liblmdb.dll"
    lmdb-data-file = "data\\platon.db"
    lmdb-name = platon_p2p
    lmdb-max-readers = 30
}

redir = {
    hashrate = {
        branching-factor = 10
        level = 3
        lowest-key = 1
        highest-key = 100
        start-level = 2s
        algorithm = hashrate
    }
}


core = {

    # keystore 默认存储路径
    # 默认路径：${user.dir}/{keystore.dir}
    keystore.dir = keystore

    # 创世区块配置
    genesis = {
        # 搜索路径：`resources/genesis`
        #
        resourcePath = genesis.json

        # 全路径
        # 优先级高于resourcePath
        # filePath = /some/path/frontier.json
    }

    database = {
        # 数据存储物理路径(可为相对路径或全路径)
        dir = database

        # 只支持leveldb或rocksdb
        source = rocksdb

        # 版本不匹配的处理方式 :
        #  * EXIT   - (默认)打印错误信息，并通过抛出异常退出程序
        #  * RESET  - 清除数据文件，程序继续执行
        #  * IGNORE - 忽略存在的问题
        incompatibleDatabaseBehavior = EXIT
    }

    mine = {
        # 是否开启挖矿（true/false）
        start = true

        # 出块时长（单位：毫秒）
        mineBlockTime = 1000

        # 旷工账号
        coinbase = "0000000000000000000000000000000000000000"

        # 最小能量price
        minEnergonPrice = 15000000000   # 15Gwei
    }

    validator = {
        timeliness.ancestorBlockCache.size = 50
        timeliness.pendingBlockCache.size = 50
        timeliness.pendingTxCache.size = 5000
    }

    chain.only = false
    block.record = false

    # enable/disable 内部交易记录
    record.internal.transactions.data = true

    dump = {

        full = false
        dir = dmp

       # This defines the vmtrace dump
       # to the console and the style
       # -1 for no block trace
       # styles: [pretty/standard+] (default: standard+)
       block = -1

       style = pretty

       # clean the dump dir each start
       clean.on.restart = true
    }

    vm = {
        #
        structured.trace = true
    }
}



