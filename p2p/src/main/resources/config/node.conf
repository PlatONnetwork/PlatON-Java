node = {
    ip=192.168.7.109
}

peer = {
    listen.port=12345
    public-key=0x506bc1dc099358e5137292f4efdd57e400f29ba5132aa5d12b18dac1c1f6aaba645c0b7b58158babbfa6c6cd5a48aa7340a8749176b120e8516216787a13dc76
    private-key=a392604efc2fad9c0b3da43b5f698a2e3f270f170d859912be0d54742275c5f6
    #in seconds
    create.session.timeout = 10

    #in seconds, message.response.timeout > create.session.timeout
    message.response.timeout = 12
    #in seconds
    peer.connect.timeout = 2

    #in seconds
    time.interval.for.duplicated.message = 30

    active.list =
        [
            {
                ip=192.168.7.113
                port=11001
                public-key=0x506bc1dc099358e5137292f4efdd57e400f29ba5132aa5d12b18dac1c1f6aaba645c0b7b58158babbfa6c6cd5a48aa7340a8749176b120e8516216787a13dc76
            }
        ]
}

grpc = {
    listen.port = 11001
}

kad.plugin = {
    id-length = 20
    restore-interval = 50000
    response-timeout = 1
    operation-timeout = 0
    max-concurrent-messages-transiting = 1
    K-value = 8
    replacement-cache-size = 8
    stale-times = 8
}

lmdb = {
    lmdbjava-native-lib = "lmdb\\liblmdb.dll"
    lmdb-data-file = "data\\platon.db"
    lmdb-name = platon_p2p
    lmdb-max-readers = 30
}

redir = {
    hashrate = {
        branching-factor = 10
        level = 3
        lowest-key = 1
        highest-key = 100
        start-level = 2s
        algorithm = hashrate
    }
}


platon = {
    keystore.dir = keystore

    genesis = {
        resourcePath = genesis.json


        # filePath = /some/path/frontier.json
    }

    database = {
        dir = database

        source = rocksdb


        incompatibleDatabaseBehavior = EXIT
    }

    mine = {
        start = true

        mineBlockTime = 1000

        coinbase = "0000000000000000000000000000000000000000"
    }

    validator = {
        timeliness.ancestorBlockCache.size = 50
        timeliness.pendingBlockCache.size = 50
        timeliness.pendingTxCache.size = 5000
    }
}



